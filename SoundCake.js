// Generated by CoffeeScript 1.3.3
(function() {
  var callid, connectToSpokes, controlInterface, createToolbar, disconnectFromSpokes, jquiscript, plugin_name, plugin_registered, pollDeviceEvents, registerPlugin, spokes, unregisterPlugin;

  
  jquiscript = document.createElement('script');

  jquiscript.type = 'text/javascript';

  jquiscript.src = 'http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.9/jquery-ui.min.js';

  document.getElementsByTagName("head")[0].appendChild(jquiscript);

  jquiscript.onload = jquiscript.onreadystatechange = function() {
    createToolbar();
  };
  spokes = null;

  plugin_registered = false;

  plugin_name = "SoundCake";

  callid = 0;

  createToolbar = function() {
    $('<div id="#soundcake_toolbar" style="background-color:red; width: 100px; height: 100px;"><p>test</p></div>').insertAfter('div#header.main_background.gs_header');
	$("#soundcake_toolbar").draggable();
    $("#soundcake_toolbar").dialog();
  };

  connectToSpokes = function() {
    spokes = new Spokes("http://localhost:32001/Spokes");
    spokes.Device.deviceList(function(result) {
      if (!result.isError) {
        if (result.Result[0] !== null) {
          spokes.Device.attach(result.Result[0].Uid, controlInterface);
          pollDeviceEvents();
        } else {
          alert("Error: Device was null on connecting to Spokes. Is there a Plantronics device connects?");
        }
      } else {
        alert("Error connecting to Spokes.");
      }
    });
  };

  controlInterface = function(session) {
    if (session.isError || !spokes.Device.isAttached) {
      alert("Session Registration Error");
    } else {
      registerPlugin();
    }
  };

  registerPlugin = function() {
    if (!plugin_registered) {
      spokes.Plugin.register(plugin_name, function(result) {
        if (!result.isError) {
          spokes.Plugin.isActive(plugin_name, true, function(result) {
            if (!result.isError) {
              plugin_registered = true;
            } else {
              alert("Error checking if plugin is active: " + result.Err.Description);
            }
          });
        } else {
          alert("Error registering plugin: " + result.Err.Description);
        }
      });
    }
  };

  unregisterPlugin = function() {
    spokes.Plugin.unRegister(plugin_name);
    plugin_registered = false;
  };

  disconnectFromSpokes = function() {
    unregisterPlugin();
    spokes.Device.release(function(result) {
      if (result.isError) {
        alert("Error releasing device");
      }
      spokes = null;
    });
  };

  pollDeviceEvents = function() {
    setInterval(function() {
      if (spokes === null) {
        return;
      }
      if (!spokes.Device.isAttached) {
        return;
      }
      spokes.Device.events(function(result) {
        var i;
        if (result.isError) {
          alert("Error polling for events: " + result.Err.Description);
        } else {
          if (result.Result.length > 0) {
            i = 0;
            while (i < result.Result.length) {
              switch (result.Result[i].Event_Name) {
                case "Don":
                  window.Grooveshark.play();
                  break;
                case "Doff":
                  window.Grooveshark.pause();
                  break;
              }
              i++;
            }
          }
        }
      });
    }, 2000);
  };

  

}).call(this);
